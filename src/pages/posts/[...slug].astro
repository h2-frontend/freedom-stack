---
import { db, Posts, eq } from "astro:db";
import { marked } from "marked";
import DOMPurify from "isomorphic-dompurify";
import { Icon } from "astro-iconify";

import Layout from "@/layouts/Layout.astro";
import ShowIfAuthenticated from "@/components/ShowIfAuthenticated.astro";

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect("/posts");
}

const entry = await db.select().from(Posts).where(eq(Posts.slug, slug)).get();

if (!entry) {
  return Astro.redirect("/posts");
}

const content = await marked(entry?.content || "");

if (!content) {
  return Astro.redirect("/posts");
}

const cleanHTML = DOMPurify.sanitize(content);

// The browser should always check freshness
Astro.response.headers.set("cache-control", "public, max-age=0, must-revalidate");

// The CDN should cache for a year, but revalidate if the cache tag changes
Astro.response.headers.set("netlify-cdn-cache-control", "s-maxage=31536000");

// Tag the page with the project slug
Astro.response.headers.set("netlify-cache-tag", `post-${slug}`);
---

<Layout title={entry?.title || ""}>
  <article class="container mx-auto p-6">
    <div class="text-sm breadcrumbs m-0">
      <ul class="!p-0 !m-0">
        <li><a href="/">Home</a></li>
        <li><a href="/posts">Posts</a></li>
        <li>Post</li>
      </ul>
    </div>

    <div class="flex flex-col">
      <h1 class="flex items-center gap-3">
        {entry?.title}
        <ShowIfAuthenticated server:defer>
          <a class="btn btn-sm btn-circle p-0 m-0" href={`/dashboard/posts/edit/${slug}`}>
            <Icon pack="lucide" name="pencil" height={16} width={16} />
          </a>
        </ShowIfAuthenticated>
      </h1>
      <p class="m-0">
        Posted on {new Date(entry?.pubDate).toLocaleDateString("en-US", { month: "long", year: "numeric" })} by {
          entry?.author
        }
      </p>
    </div>

    <div class="divider" role="separator"></div>

    <div set:html={cleanHTML} />
  </article>
</Layout>
